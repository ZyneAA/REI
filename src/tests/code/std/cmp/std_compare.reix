expose class StdCompare {

    static check(first, second, action) {
        let first_type_check = @typeof(first, "Comparable");
        let second_type_check = @typeof(second, "Comparable");

        if (first_type_check != true or second_type_check != true) {
            fatal "Must inherit Comparable class to perform " + action;
        }
    }

    static is_eq(first, second) {
        StdCompare.check(first, second, "is_eq()");
        return first.get_comparable() == second.get_comparable();
    }

    static max(first, second) {
        StdCompare.check(first, second, "max()");

        if (first.get_comparable() > second.get_comparable()) {
            return first;
        } else {
            return second;
        }
    }

    static min(first, second) {
        StdCompare.check(first, second, "min()");

        if (first.get_comparable() > second.get_comparable()) {
            return second;
        } else {
            return first;
        }
    }

}

