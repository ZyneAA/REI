expose class StdCompare {

    static is_eq(first, second) {

        if (@typeof(first, "Comparable") and @typeof(second, "Comparable")) {
            return first.get_comparable() == second.get_comparable();
        }
        else {
            println "Both comparables must inherit Comparable class";
            return null;
        }

    }

    static max(first, second) {
        let first_type_check = @typeof(first, "Comparable");
        let second_type_check = @typeof(first, "Comparable");

        if (first_type_check != true or second_type_check != true) {
            fatal "Must inherit Comparable class to perform max()";
        }

        if (first.get_comparable() > second.get_comparable()) {
            return first;
        } else {
            return second;
        }
    }

    static min(first, second) {
        if (@typeof(first, "Comparable") and @typeof(second, "Comparable")) {
            if (first.get_comparable() > second.get_comparable()) {
                return second;
            } else {
                return first;
            }
        } else {
            fatal "Must inherit Comparable class to perform min()";
        }
    }

}

